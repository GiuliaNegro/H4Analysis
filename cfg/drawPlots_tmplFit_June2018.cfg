<draw>
plots 
saveAs png pdf root
outDir ~/www/TBJune2018_H4Analysis/hodo/11433
#outDir ~/www/TBJune2018_H4Analysis/hodo/160MHz_18C
plugins 'rootlogon.C' 'FuriousPlotter/macros/FPCanvasStyle.C'
</draw>

src2018 ~/work/ECAL_TB/H4Analysis/ntuples/ECAL_H4_June2018_templateFit_11433.root h4
#src2018 ~/work/ECAL_TB/H4Analysis/ntuples/ECAL_H4_June2018_templateFit_160MHz_18C.root h4

VFEs C3 
digitizer MCP1 MCP2 CLK TRG 




####template fit########
for ch VFEs

<fit_ampl_$ch>
histos h
<h>
src+= src2018
var 'fit_ampl[$ch]'
cut 'amp_max[C3]>50 && maximum[MCP1]>40'
#cut 'amp_max[C3]>50 && maximum[MCP1]>40 && fabs(nFibresOnX[0]-2)<1 && fabs(nFibresOnY[0]-2)<1 && fabs(X[0]+4)<3 && fabs(Y[0]-4)<3'
bins 800 0 8000
customize 'SetTitle(";fit_ampl (ADC);Events")' 'SetFillColor(kOrange+2)' 
drawOptions hist
</h>
</fit_ampl_$ch>

<fit_time_$ch= fit_ampl_$ch>
h.var 'fit_time[$ch]'
h.bins 400 0 1000
h.customize 'SetTitle(";fit_time (ns); Events")' 'SetFillColor(kBlue)' 'SetAxisRange(0, 1000, "X")'
</fit_time_$ch>

draw.plots+= fit_ampl_$ch fit_time_$ch 
end
########################




#####dt fit VFE-MCP##########
<dt_fit_VFE_MCP1> 
histos h
<h>
src+= src2018
var 'fit_time[C3]-t0[MCP1]+phase[CLK]'
cut 'fabs(nFibresOnX[0]-2)<1 && fabs(nFibresOnY[0]-2)<1 && fabs(X[0]+3)<3 && fabs(Y[0]-4)<3 && maximum[MCP1]>200 && maximum[MCP2]>300 && time_maximum[MCP1]<40. && time_maximum[MCP2]<40. && fit_ampl[C3]>4300' 
bins 500 0 500
customize 'SetTitle(";fit_time_C3-t0_MCP1+t0_CLK (ns); Events")' 'SetFillColor(kBlue+2)' 
drawOptions hist
</h>
</dt_fit_VFE_MCP1>

<dt_fit_VFE_MCP1_mod= dt_fit_VFE_MCP1>
h.var '(fit_time[C3]-t0[MCP1]+phase[CLK]) - int((fit_time[C3]-t0[MCP1]+phase[CLK])/6.237)*6.237'
h.bins 800 0 8
#h.var '(fit_time[C3]-t0[MCP1]+phase[CLK]) - int((fit_time[C3]-t0[MCP1]+phase[CLK])/8.33)*8.33'
#h.bins 1000 0 10
</dt_fit_VFE_MCP1_mod>

<dt_fit_VFE_MCP2= dt_fit_VFE_MCP1> 
h.var 'fit_time[C3]-t0[MCP2]+phase[CLK]'
h.customize 'SetTitle(";fit_time_C3-t0_MCP2+t0_CLK (ns); Events")' 'SetFillColor(kBlue+2)'  
</dt_fit_VFE_MCP2>

<dt_fit_VFE_MCP2_mod= dt_fit_VFE_MCP1>
h.var '(fit_time[C3]-t0[MCP2]+phase[CLK]) - int((fit_time[C3]-t0[MCP2]+phase[CLK])/6.237)*6.237'
h.bins 800 0 8
#h.var '(fit_time[C3]-t0[MCP2]+phase[CLK]) - int((fit_time[C3]-t0[MCP2]+phase[CLK])/8.33)*8.33'
#h.bins 1000 0 10
h.customize 'SetTitle(";fit_time_C3-t0_MCP2+t0_CLK (ns); Events")' 'SetFillColor(kBlue+2)' 
</dt_fit_VFE_MCP2_mod>

draw.plots+= dt_fit_VFE_MCP1 dt_fit_VFE_MCP1_mod dt_fit_VFE_MCP2 dt_fit_VFE_MCP2_mod
########################




#####dt MCP1-MCP2##########
<dt0_MCP1_MCP2= dt_fit_VFE_MCP1> 
h.var 'fabs(t0[MCP1]-t0[MCP2])'
#h.bins 200 -10 10
h.bins 150 5 8 
h.customize 'SetTitle(";t0_MCP1-t0_MCP2 (ns); Events")' 'SetFillColor(kBlue+2)' 
</dt0_MCP1_MCP2>

draw.plots+= dt0_MCP1_MCP2 
########################




####Amp_eff, res MCP####
<amp_eff_MCP1_MCP2>
histos h
<h>
src+= src2018
var 'sqrt(2)*maximum[MCP1]*maximum[MCP2]/sqrt(pow(maximum[MCP1],2)+pow(maximum[MCP2],2))'
bins 500 0 5000
cut 'amp_max[C3]>50 && maximum[MCP1]>40'
customize 'SetTitle(";amp_eff_MCP1_MCP2;Events")' 'SetAxisRange(0, 3000, "X")' 'SetFillColor(kYellow+1)'
drawOptions hist
</h>
</amp_eff_MCP1_MCP2>

<dt0_MCP1_MCP2_vs_amp_eff= dt_fit_VFE_MCP1> 
h.customize 'macro:FPCanvasStyle(this, "", "", 1, "", 1, 1)' 
h.var '(fabs(t0[MCP1]-t0[MCP2])):(sqrt(2)*maximum[MCP1]*maximum[MCP2]/sqrt(pow(maximum[MCP1],2)+pow(maximum[MCP2],2)))'
h.cut 'fabs(nFibresOnX[0]-2)<1 && fabs(nFibresOnY[0]-2)<1 && fabs(X[0]+4)<3 && fabs(Y[0]-4)<3 && maximum[MCP1]>150 && maximum[MCP2]>200 && time_maximum[MCP1]<40. && time_maximum[MCP2]<40.' 
#h.bins 200 0 2000 150 5 8
h.bins 200 0 2000 100 6 6.8
h.customize 'SetTitle(";amp_eff_MCP1_MCP2;t0_MCP1-t0_MCP2 (ns)")' 
h.drawOptions COLZ
</dt0_MCP1_MCP2_vs_amp_eff>

<resMCPs>
histos h
<h>
src+= src2018
##for 160 MHz - 18C
var 'sqrt( (2*pow(0.0206695,2)) + pow((10.1586/ (sqrt(2)*maximum[MCP1]*maximum[MCP2]/sqrt(pow(maximum[MCP1],2)+pow(maximum[MCP2],2))) ),2) ) 
cut 'fabs(nFibresOnX[0]-2)<1 && fabs(nFibresOnY[0]-2)<1 && fabs(X[0]+4)<3 && fabs(Y[0]-4)<3 && maximum[MCP1]>150 && maximum[MCP2]>200 && time_maximum[MCP1]<40. && time_maximum[MCP2]<40.'
bins 1000 0 0.3
customize 'SetTitle(";#sigma(t_{MCP1}-t_{MCP2});Events")' 'SetFillColor(kYellow+1)' 'SetAxisRange(0, 0.1, "X")'
drawOptions hist
</h>
</resMCPs>

draw.plots+= amp_eff_MCP1_MCP2 dt0_MCP1_MCP2_vs_amp_eff resMCPs
########################




####dt digitizer-VFE####
<dt_TRG_VFE= dt_fit_VFE_MCP1> 
h.var 'fabs(t0[TRG]-fit_time[C3])'
##for 160MHz
h.bins 200 0 200 
##for 120MHz
#h.bins 200 200 400  
h.customize 'SetTitle(";t0_TRG-fit_time_C3 (ns); Events")' 'SetFillColor(kBlue+2)' 
</dt_TRG_VFE>

<dt_MCP1_VFE= dt_fit_VFE_MCP1> 
h.var 'fabs(t0[MCP1]-fit_time[C3])'
##for 160MHz
h.bins 200 200 400 
##for 120MHz
#h.bins 200 300 500
h.customize 'SetTitle(";t0_MCP1-fit_time_C3 (ns); Events")' 'SetFillColor(kBlue+2)' 
</dt_MCP1_VFE>

<dt_TRG_MCP1= dt_fit_VFE_MCP1> 
h.var 'fabs(t0[TRG]-t0[MCP1])'
h.bins 200 0 200
h.customize 'SetTitle(";t0_TRG-t0_MCP1 (ns); Events")' 'SetFillColor(kBlue+2)' 
</dt_TRG_MCP1>

<dt_MCP_VFE_vs_dt_TRG_VFE= dt_fit_VFE_MCP1> 
h.customize 'macro:FPCanvasStyle(this, "", "", 1, "", 1, 1)' 
h.var '(fabs(t0[MCP1]-fit_time[C3])):(fabs(t0[TRG]-fit_time[C3]))'
##for 160MHz
h.bins 100 90. 140. 80 240. 280.
##for 120MHz
#h.bins 100 250. 300. 80 400. 440.
h.customize 'SetTitle(";t0_TRG-fit_time_C3 (ns);t0_MCP1-fit_time_C3 (ns)")' 
h.drawOptions COLZ
</dt_MCP_VFE_vs_dt_TRG_VFE>

<dt_MCP1_VFE_vs_dt_TRG_MCP1= dt_fit_VFE_MCP1> 
h.customize 'macro:FPCanvasStyle(this, "", "", 1, "", 1, 1)' 
h.var '(fabs(t0[MCP1]-fit_time[C3])):(fabs(t0[TRG]-t0[MCP1]))'
##for 160MHz
h.bins 100 120. 170. 80 240. 280.
#h.bins 80 135. 155. 80 240. 280.
##for 120MHz
#h.bins 80 135. 155. 80 400. 440.
h.customize 'SetTitle(";t0_TRG-t0_MCP1 (ns);t0_MCP1-fit_time_C3 (ns)")' 
h.drawOptions COLZ
</dt_MCP1_VFE_vs_dt_TRG_MCP1>

draw.plots+= dt_TRG_VFE dt_MCP1_VFE dt_MCP_VFE_vs_dt_TRG_VFE 
#draw.plots+= dt_TRG_MCP1 dt_MCP1_VFE_vs_dt_TRG_MCP1
########################


